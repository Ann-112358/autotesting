SETUP 

git config --global user.name “name”

Sets username, which aids in reviewing by whom the changes were made. 

git config --global user.email “email address”

Sets an email address, this inturn helps in tracking by whom the commit or merge activity was made.

git config --global color.ui auto

Sets an automatic command line coloring effect for easy reviewing.  

CREATE AND INITIALIZE 

git init

Initialises the existing directory as a git repository

git init [repository name]

Used to create or initiate a new git repository.

git clone [url]

Used to obtain the entire repository or download existing source code from the URL provided. Basically makes an identical copy of the latest version of the repository in the local system.

STAGING AND COMMIT

git add [file]

Adds a file from the working tree to the Staging area / current branch.

git add *

Adds one or more files from the working tree to the Staging area / current branch.

git add.

Stages all files in the entire repository to the Staging area / current branch.

git rm [file]

This command deletes the existing file from your working directory.

git status

Lists all the files that have to be committed.

git diff 

Shows the changed contents that aren't staged.

git diff --staged 

Shows the changed contents that are staged but not committed.

git commit -m “[commit message]”

Records or snapshots the changes permanently in the version history of the repository.

git commit -a

Commits all the modified or created files to the repository.

git reset [file]

Unstage a file without any change in the working directory.

git reset [commit]

Undoes all the commits after the specific commit mentioned and preserves the changes locally.

git reset --hard [commit]

Discards all history and goes back to the specific commit mentioned ..

Bonus: Git commit saves your changes only locally.

BRANCH AND MERGE

git branch

Lists the branches available in the repository.

git branch [branch name]

Creates a new branch.

git branch -d [branch name]

Deletes the feature branch.

git checkout [branch name]

Used to checkout to the branch specified.

git checkout -b [branch name]

Creates a new branch and then checks out to the same.

git merge [branch name]

Merges specified branches to the current branch.

LOGS AND REVIEW
git log

Used to list the version history for the current branch.

git log -follow [file]

Particularly shows the versions of the file mentioned.

git show [commit]

Shows the content change and metadata status of the specific commit. 

REMOTE UPDATE AND SHARE

git remote add [variable name] [URL]

Used to connect your local repository to the remote server.

git push [variable name] [branch name]

Sends the branch commits to your remote server

git push --set-upstream [variable name] [branch name]

or 

git push -u origin [branch name]

If branch is newly created, then we can upload with above command 

git push [variable name] master

Sends the committed changes of the master branch to your remote repository.

git push -all [variable name]

Pushes all branches to your remote repository.

git pull [repository link]

Fetches and merges changes on the remote server to your working directory. 

Note: Git push only uploads changes that are committed.
